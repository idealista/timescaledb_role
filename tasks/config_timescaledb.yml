---
- name: TIMESCALEDB | Check if extension is already isntalled.
  become: yes
  become_user: postgres
  postgresql_info:
    db: "{{ timescaledb_pg_database }}"
    filter: databases
  ignore_errors: yes
  register: extension_installed_check

- name: TIMESCALEDB | Prepare handlers
  command: /bin/true
  changed_when: true
  notify: timescaledb pg restart
  when: extension_installed_check.failed or extension_installed_check.databases[ timescaledb_pg_database ].extensions['timescaledb'] is undefined

- name: TIMESCALEDB | Flush handlers
  meta: flush_handlers

- name: TIMESCALEDB | Wait for postgresql to start up
  wait_for:
    port: "{{ timescaledb_pg_port }}"
    timeout: 60

- name: TIMESCALEDB | Create timescaledb extension
  become: true
  become_user: "{{ timescaledb_pg_user }}"
  postgresql_ext:
    name: timescaledb
    db: "{{ timescaledb_pg_database }}"
    login_user: "{{ timescaledb_pg_user }}"

- name: TIMESCALEDB | Setup timescaledb data nodes
  become: true
  become_user: "{{ timescaledb_pg_user }}"
  postgresql_query:
    login_user: "{{ timescaledb_pg_user }}"
    db: "{{ timescaledb_pg_database }}"
    query: "SELECT add_data_node('{{ item }}', host => '{{ item }}');"
    autocommit: true  # This query can't be run inside a transaction block 
    password: "{{ timescaledb_pg_user_password | default(omit) }}"
  with_items: "{{ timescaledb_multinode_data_nodes}}"
  when: timescaledb_multinode_enabled and ansible_hostname == timescaledb_multinode_access_node
